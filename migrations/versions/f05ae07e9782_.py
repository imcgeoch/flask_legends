"""empty message

Revision ID: f05ae07e9782
Revises: 
Create Date: 2020-09-24 00:27:38.718006

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f05ae07e9782'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('df_world',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('altname', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artifacts',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('name_string', sa.String(length=100), nullable=True),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('written_content_id', sa.Integer(), nullable=True),
    sa.Column('holder_hfid', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('structure_local_id', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=20), nullable=True),
    sa.Column('item_subtype', sa.String(length=20), nullable=True),
    sa.Column('item_description', sa.String(length=200), nullable=True),
    sa.Column('mat', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('attacking_squads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('attacking_squad_race', sa.String(length=30), nullable=True),
    sa.Column('attacking_squad_entity_pop', sa.Integer(), nullable=True),
    sa.Column('attacking_squad_number', sa.Integer(), nullable=True),
    sa.Column('attacking_squad_deaths', sa.Integer(), nullable=True),
    sa.Column('attacking_squad_site', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competitors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('competitor_hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('creatures',
    sa.Column('creature_id', sa.String(length=30), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('name_singular', sa.String(length=30), nullable=True),
    sa.Column('name_plural', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'creature_id')
    )
    op.create_table('dance_forms',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('defending_squads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('defending_squad_race', sa.String(length=30), nullable=True),
    sa.Column('defending_squad_entity_pop', sa.Integer(), nullable=True),
    sa.Column('defending_squad_number', sa.Integer(), nullable=True),
    sa.Column('defending_squad_deaths', sa.Integer(), nullable=True),
    sa.Column('defending_squad_site', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entities',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('race', sa.String(length=20), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('claims', sa.String(), nullable=True),
    sa.Column('worship_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('entity_entity_links',
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('target', sa.Integer(), nullable=True),
    sa.Column('strength', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('link_type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity_populations',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race', sa.String(length=20), nullable=True),
    sa.Column('civ_id', sa.Integer(), nullable=True),
    sa.Column('num', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('entity_position_assignments',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('histfig', sa.Integer(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('squad_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id', 'entity_id')
    )
    op.create_table('entity_position_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('position_profile_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity_positions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('name_male', sa.String(length=20), nullable=True),
    sa.Column('name_female', sa.String(length=20), nullable=True),
    sa.Column('spouse_male', sa.String(length=20), nullable=True),
    sa.Column('spouse_female', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id', 'entity_id')
    )
    op.create_table('entity_reputations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('first_ageless_season_count', sa.Integer(), nullable=True),
    sa.Column('first_ageless_year', sa.Integer(), nullable=True),
    sa.Column('unsolved_murders', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_collections',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('start_seconds72', sa.Integer(), nullable=True),
    sa.Column('end_seconds72', sa.Integer(), nullable=True),
    sa.Column('subregion_id', sa.Integer(), nullable=True),
    sa.Column('coords', sa.String(length=20), nullable=True),
    sa.Column('feature_layer_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('adjective', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('ordinal', sa.Integer(), nullable=True),
    sa.Column('occasion_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('parent_eventcol', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('entity_id2', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('eventcol_attackers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_defenders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_event_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_eventcol_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id1', sa.Integer(), nullable=True),
    sa.Column('eventcol_id2', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_noncoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('features',
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occasion_id', sa.Integer(), nullable=True),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('reference', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goals',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('hfid', sa.Integer(), nullable=False),
    sa.Column('goal', sa.Enum('create a great work of art', 'immortality', 'master a skill', 'start a family', 'rule the world', 'fall in love', 'see the great natural sites', 'become a legendary warrior', 'bring peace to the world', 'make a great discovery', 'craft a masterwork', 'attain rank in society', 'bathe world in chaos', name='goal_types'), nullable=False),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'hfid', 'goal')
    )
    op.create_table('hf_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid1', sa.Integer(), nullable=True),
    sa.Column('hfid2', sa.Integer(), nullable=True),
    sa.Column('link_strength', sa.Integer(), nullable=True),
    sa.Column('link_type', sa.Enum('child', 'spouse', 'deity', 'apprentice', 'mother', 'father', 'former apprentice', 'master', 'prisoner', 'imprisoner', 'former master', 'former spouse', 'deceased spouse', 'lover', name='hf_link_type'), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historical_eras',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'name')
    )
    op.create_table('historical_events',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('seconds72', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('hfid2', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('entity_id2', sa.Integer(), nullable=True),
    sa.Column('artifact_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('site_id2', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('site_civ_id', sa.Integer(), nullable=True),
    sa.Column('new_site_civ_id', sa.Integer(), nullable=True),
    sa.Column('reason_id', sa.Integer(), nullable=True),
    sa.Column('circumstance_id', sa.Integer(), nullable=True),
    sa.Column('wcid', sa.Integer(), nullable=True),
    sa.Column('building', sa.Integer(), nullable=True),
    sa.Column('agreement_id', sa.Integer(), nullable=True),
    sa.Column('position_profile_id', sa.Integer(), nullable=True),
    sa.Column('claim', sa.Enum('heirloom', 'symbol', 'treasure', name='claim_types'), nullable=True),
    sa.Column('dest_site_id', sa.Integer(), nullable=True),
    sa.Column('dest_structure_id', sa.Integer(), nullable=True),
    sa.Column('dest_entity_id', sa.Integer(), nullable=True),
    sa.Column('source_site_id', sa.Integer(), nullable=True),
    sa.Column('source_structure_id', sa.Integer(), nullable=True),
    sa.Column('source_entity_id', sa.Integer(), nullable=True),
    sa.Column('from_original', sa.Boolean(), nullable=True),
    sa.Column('new_artifact_id', sa.Integer(), nullable=True),
    sa.Column('identity_id', sa.Integer(), nullable=True),
    sa.Column('abuse_type', sa.String(), nullable=True),
    sa.Column('body_state', sa.String(length=20), nullable=True),
    sa.Column('old_job', sa.String(length=20), nullable=True),
    sa.Column('new_job', sa.String(length=20), nullable=True),
    sa.Column('subregion_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=True),
    sa.Column('old_race', sa.String(length=40), nullable=True),
    sa.Column('new_race', sa.String(length=40), nullable=True),
    sa.Column('old_caste', sa.String(length=20), nullable=True),
    sa.Column('new_caste', sa.String(length=20), nullable=True),
    sa.Column('master_wcid', sa.Integer(), nullable=True),
    sa.Column('race', sa.String(length=40), nullable=True),
    sa.Column('caste', sa.String(length=20), nullable=True),
    sa.Column('law_type', sa.Enum('add', 'remove', name='law_types'), nullable=True),
    sa.Column('law', sa.String(length=50), nullable=True),
    sa.Column('result', sa.String(length=20), nullable=True),
    sa.Column('situation', sa.String(length=50), nullable=True),
    sa.Column('slayer_race', sa.String(length=40), nullable=True),
    sa.Column('slayer_caste', sa.String(length=20), nullable=True),
    sa.Column('slayer_item_id', sa.Integer(), nullable=True),
    sa.Column('slayer_shooter_item_id', sa.Integer(), nullable=True),
    sa.Column('cause', sa.String(length=30), nullable=True),
    sa.Column('interaction_action', sa.String(length=75), nullable=True),
    sa.Column('interaction_string', sa.String(length=150), nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.Column('secret_goal', sa.String(length=20), nullable=True),
    sa.Column('secret_text', sa.String(length=50), nullable=True),
    sa.Column('pets', sa.String(length=50), nullable=True),
    sa.Column('unit_type', sa.String(length=20), nullable=True),
    sa.Column('relationship', sa.String(length=30), nullable=True),
    sa.Column('ghost', sa.String(length=20), nullable=True),
    sa.Column('subtype', sa.String(length=30), nullable=True),
    sa.Column('returned', sa.Boolean(), nullable=True),
    sa.Column('woundee_race', sa.String(length=50), nullable=True),
    sa.Column('woundee_caste', sa.String(length=20), nullable=True),
    sa.Column('body_part', sa.Integer(), nullable=True),
    sa.Column('injury_type', sa.String(length=20), nullable=True),
    sa.Column('part_lost', sa.String(length=30), nullable=True),
    sa.Column('identity_id1', sa.Integer(), nullable=True),
    sa.Column('identity_id2', sa.Integer(), nullable=True),
    sa.Column('hf_rep_1_of_2', sa.String(length=20), nullable=True),
    sa.Column('hf_rep_2_of_1', sa.String(length=20), nullable=True),
    sa.Column('outcome', sa.String(length=25), nullable=True),
    sa.Column('knowledge', sa.String(length=100), nullable=True),
    sa.Column('skill_at_time', sa.Integer(), nullable=True),
    sa.Column('building_type', sa.String(length=50), nullable=True),
    sa.Column('building_custom', sa.String(length=50), nullable=True),
    sa.Column('dye_mat', sa.String(length=50), nullable=True),
    sa.Column('dye_mat_index', sa.String(length=50), nullable=True),
    sa.Column('art_id', sa.Integer(), nullable=True),
    sa.Column('art_sub_id', sa.Integer(), nullable=True),
    sa.Column('improvement_type', sa.String(length=50), nullable=True),
    sa.Column('improvement_subtype', sa.String(length=50), nullable=True),
    sa.Column('imp_mat', sa.String(length=50), nullable=True),
    sa.Column('creation_event', sa.Integer(), nullable=True),
    sa.Column('method', sa.String(length=50), nullable=True),
    sa.Column('occasion_id', sa.Integer(), nullable=True),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('abandoned', sa.Boolean(), nullable=True),
    sa.Column('dispute', sa.String(length=20), nullable=True),
    sa.Column('item', sa.Integer(), nullable=True),
    sa.Column('mat', sa.String(length=50), nullable=True),
    sa.Column('item_type', sa.String(length=20), nullable=True),
    sa.Column('item_subtype', sa.String(length=20), nullable=True),
    sa.Column('mat_type', sa.Integer(), nullable=True),
    sa.Column('mat_index', sa.Integer(), nullable=True),
    sa.Column('dye_mat_type', sa.Integer(), nullable=True),
    sa.Column('link_type', sa.String(length=30), nullable=True),
    sa.Column('reason', sa.String(length=50), nullable=True),
    sa.Column('position', sa.String(length=30), nullable=True),
    sa.Column('interaction', sa.String(length=50), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('circumstance', sa.String(length=50), nullable=True),
    sa.Column('topic', sa.String(length=30), nullable=True),
    sa.Column('first', sa.Boolean(), nullable=True),
    sa.Column('new_structure', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('historical_figures',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('race', sa.String(length=40), nullable=True),
    sa.Column('caste', sa.String(length=10), nullable=True),
    sa.Column('deity', sa.Boolean(), nullable=True),
    sa.Column('force', sa.Boolean(), nullable=True),
    sa.Column('active_interaction', sa.String(length=50), nullable=True),
    sa.Column('animated', sa.Boolean(), nullable=True),
    sa.Column('animated_string', sa.String(length=50), nullable=True),
    sa.Column('appeared', sa.Integer(), nullable=True),
    sa.Column('associated_type', sa.String(length=20), nullable=True),
    sa.Column('birth_seconds72', sa.Integer(), nullable=True),
    sa.Column('birth_year', sa.Integer(), nullable=True),
    sa.Column('death_seconds72', sa.Integer(), nullable=True),
    sa.Column('death_year', sa.Integer(), nullable=True),
    sa.Column('current_identity_id', sa.Integer(), nullable=True),
    sa.Column('ent_pop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('identities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('race', sa.String(length=40), nullable=True),
    sa.Column('caste', sa.String(length=10), nullable=True),
    sa.Column('birth_seconds72', sa.Integer(), nullable=True),
    sa.Column('birth_year', sa.Integer(), nullable=True),
    sa.Column('profession', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('histfig_id', sa.Integer(), nullable=True),
    sa.Column('nemisis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('inhabitants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('structure_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interaction_knowledges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('interaction_knowledge', sa.String(length=12), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('intrigue_actors',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('parent_hfid', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=30), nullable=True),
    sa.Column('strategy', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'parent_hfid', 'local_id')
    )
    op.create_table('intrigue_plots',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('hfid', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('on_hold', sa.Boolean(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'hfid', 'local_id')
    )
    op.create_table('journey_pets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('journey_pet', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('landmasses',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('coord1', sa.String(length=10), nullable=True),
    sa.Column('coord2', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mountain_peaks',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coords', sa.String(length=10), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('musical_forms',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('occasions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('event', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id', 'entity_id')
    )
    op.create_table('poetic_forms',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('wc_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('type', sa.Enum('Wetland', 'Grassland', 'Hills', 'Desert', 'Forest', 'Mountains', 'Lake', 'Ocean', 'Tundra', 'Glacier', name='region_types'), nullable=True),
    sa.Column('coords', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('relationship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid1', sa.Integer(), nullable=True),
    sa.Column('hfid2', sa.Integer(), nullable=True),
    sa.Column('known_identity_id', sa.Integer(), nullable=True),
    sa.Column('last_meet_seconds72', sa.Integer(), nullable=True),
    sa.Column('last_meet_year', sa.Integer(), nullable=True),
    sa.Column('meet_count', sa.Integer(), nullable=True),
    sa.Column('rep_buddy', sa.Integer(), nullable=True),
    sa.Column('love', sa.Integer(), nullable=True),
    sa.Column('respect', sa.Integer(), nullable=True),
    sa.Column('trust', sa.Integer(), nullable=True),
    sa.Column('loyalty', sa.Integer(), nullable=True),
    sa.Column('fear', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationship_historical',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid1', sa.Integer(), nullable=True),
    sa.Column('hfid2', sa.Integer(), nullable=True),
    sa.Column('love', sa.Integer(), nullable=True),
    sa.Column('respect', sa.Integer(), nullable=True),
    sa.Column('trust', sa.Integer(), nullable=True),
    sa.Column('loyalty', sa.Integer(), nullable=True),
    sa.Column('fear', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('end_pos', sa.String(length=12), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedules',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occasion_id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('reference', sa.Integer(), nullable=True),
    sa.Column('reference2', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=30), nullable=True),
    sa.Column('item_subtype', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id', 'occasion_id', 'entity_id')
    )
    op.create_table('site_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('link_type', sa.Enum('lair', 'home structure', 'seat of power', 'occupation', 'hangout', name='site_link_types'), nullable=True),
    sa.Column('occupation_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('sub_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_maps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('path', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sites',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('name2', sa.String(length=50), nullable=True),
    sa.Column('coords', sa.String(length=10), nullable=True),
    sa.Column('rectangle', sa.String(length=20), nullable=True),
    sa.Column('type', sa.Enum('cave', 'fortress', 'dark fortress', 'forest retreat', 'town', 'vault', 'hillocks', 'dark pits', 'hamlet', 'tomb', 'mountain halls', 'camp', 'lair', 'shrine', 'tower', 'castle', 'fort', 'monastery', name='site_types'), nullable=True),
    sa.Column('civ_id', sa.Integer(), nullable=True),
    sa.Column('current_owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.Column('skill', sa.String(length=40), nullable=True),
    sa.Column('total_ip', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spheres',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('hfid', sa.Integer(), nullable=False),
    sa.Column('sphere', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'hfid', 'sphere')
    )
    op.create_table('structures',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('name2', sa.String(length=50), nullable=True),
    sa.Column('type', sa.Enum('underworld spire', 'inn tavern', 'market', 'temple', 'dungeon', 'keep', 'tomb', 'mead hall', 'library', 'guildhall', 'counting house', 'tower', name='structure_types'), nullable=True),
    sa.Column('subtype', sa.Enum('catacombs', 'standard', 'sewers', name='structure_subtypes'), nullable=True),
    sa.Column('worship_hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'site_id', 'local_id')
    )
    op.create_table('styles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('content_id', sa.Integer(), nullable=True),
    sa.Column('style', sa.String(length=20), nullable=True),
    sa.Column('magnitude', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('underground_regions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('cavern', 'magma', 'underworld', name='ug_region_types'), nullable=True),
    sa.Column('coords', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('vague_relationship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('hfid1', sa.Integer(), nullable=True),
    sa.Column('hfid2', sa.Integer(), nullable=True),
    sa.Column('war_buddy', sa.Boolean(), nullable=True),
    sa.Column('athlete_buddy', sa.Boolean(), nullable=True),
    sa.Column('athletic_rival', sa.Boolean(), nullable=True),
    sa.Column('childhood_friend', sa.Boolean(), nullable=True),
    sa.Column('jealous_obsession', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('world_constructions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('coords', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('world_maps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('bm', 'detailed', 'dip', 'drn', 'el', 'elw', 'evil', 'hyd', 'nob', 'rain', 'sal', 'sav', 'str', 'tmp', 'trd', 'veg', 'vol', 'world_map', name='map_types'), nullable=True),
    sa.Column('path', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('written_contents',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('form', sa.Enum('musical composition', 'choreography', 'poem', 'guide', 'essay', 'manual', 'cultural history', 'star chart', 'letter', 'short story', 'cultural comparison', 'novel', 'autobiography', 'comparative biography', 'biography', 'chronicle', 'dictionary', 'play', 'encyclopedia', 'dialog', 'genealogy', 'treatise on technological evolution', 'atlas', 'alternate history', 'star catalogue', 'biographical dictionary', name='wc_form_types'), nullable=True),
    sa.Column('form_id', sa.Integer(), nullable=True),
    sa.Column('author_hfid', sa.Integer(), nullable=True),
    sa.Column('author_roll', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('written_contents')
    op.drop_table('world_maps')
    op.drop_table('world_constructions')
    op.drop_table('vague_relationship')
    op.drop_table('underground_regions')
    op.drop_table('styles')
    op.drop_table('structures')
    op.drop_table('spheres')
    op.drop_table('skills')
    op.drop_table('sites')
    op.drop_table('site_maps')
    op.drop_table('site_links')
    op.drop_table('schedules')
    op.drop_table('rivers')
    op.drop_table('relationship_historical')
    op.drop_table('relationship')
    op.drop_table('regions')
    op.drop_table('references')
    op.drop_table('poetic_forms')
    op.drop_table('occasions')
    op.drop_table('musical_forms')
    op.drop_table('mountain_peaks')
    op.drop_table('members')
    op.drop_table('landmasses')
    op.drop_table('journey_pets')
    op.drop_table('intrigue_plots')
    op.drop_table('intrigue_actors')
    op.drop_table('interaction_knowledges')
    op.drop_table('inhabitants')
    op.drop_table('identities')
    op.drop_table('historical_figures')
    op.drop_table('historical_events')
    op.drop_table('historical_eras')
    op.drop_table('hf_links')
    op.drop_table('goals')
    op.drop_table('features')
    op.drop_table('eventcol_noncoms')
    op.drop_table('eventcol_eventcol_link')
    op.drop_table('eventcol_event_link')
    op.drop_table('eventcol_defenders')
    op.drop_table('eventcol_attackers')
    op.drop_table('event_collections')
    op.drop_table('entity_reputations')
    op.drop_table('entity_positions')
    op.drop_table('entity_position_links')
    op.drop_table('entity_position_assignments')
    op.drop_table('entity_populations')
    op.drop_table('entity_links')
    op.drop_table('entity_entity_links')
    op.drop_table('entities')
    op.drop_table('defending_squads')
    op.drop_table('dance_forms')
    op.drop_table('creatures')
    op.drop_table('competitors')
    op.drop_table('attacking_squads')
    op.drop_table('artifacts')
    op.drop_table('df_world')
    # ### end Alembic commands ###
