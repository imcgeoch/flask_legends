"""last first models

Revision ID: 0a27b4f15153
Revises: 879ec288ff70
Create Date: 2019-05-30 18:02:43.310486

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a27b4f15153'
down_revision = '879ec288ff70'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity_populations',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race', sa.String(length=20), nullable=True),
    sa.Column('civ_id', sa.Integer(), nullable=True),
    sa.Column('num', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('entity_positions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('name_male', sa.String(length=20), nullable=True),
    sa.Column('name_female', sa.String(length=20), nullable=True),
    sa.Column('spouse_male', sa.String(length=20), nullable=True),
    sa.Column('spouse_female', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('features',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occasion_id', sa.Integer(), nullable=True),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('reference', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('landmasses',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('coord1', sa.String(length=10), nullable=True),
    sa.Column('coord2', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('mountain_peaks',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coords', sa.String(length=10), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('occasions',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('event', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('schedules',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occasion_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('reference', sa.Integer(), nullable=True),
    sa.Column('reference2', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=20), nullable=True),
    sa.Column('item_subtype', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('event_collections',
    sa.Column('df_world_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('start_seconds72', sa.Integer(), nullable=True),
    sa.Column('end_seconds72', sa.Integer(), nullable=True),
    sa.Column('subregion_id', sa.Integer(), nullable=True),
    sa.Column('coords', sa.String(length=20), nullable=True),
    sa.Column('feature_layer_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('adjective', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('ordinal', sa.Integer(), nullable=True),
    sa.Column('occasion_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('parent_eventcol', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('entity_id2', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'entity_id'], ['entities.df_world_id', 'entities.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'entity_id2'], ['entities.df_world_id', 'entities.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'parent_eventcol'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'site_id'], ['sites.df_world_id', 'sites.id'], ),
    sa.ForeignKeyConstraint(['df_world_id'], ['df_world.id'], ),
    sa.PrimaryKeyConstraint('df_world_id', 'id')
    )
    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'entity_id'], ['entities.df_world_id', 'entities.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'hfid'], ['historical_figures.df_world_id', 'historical_figures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_attackers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'eventcol_id'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'hfid'], ['historical_figures.df_world_id', 'historical_figures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_defenders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'eventcol_id'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'hfid'], ['historical_figures.df_world_id', 'historical_figures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_event_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'event_id'], ['historical_events.df_world_id', 'historical_events.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'eventcol_id'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_eventcol_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id1', sa.Integer(), nullable=True),
    sa.Column('eventcol_id2', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'eventcol_id1'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'eventcol_id2'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventcol_noncoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('eventcol_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'eventcol_id'], ['event_collections.df_world_id', 'event_collections.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'hfid'], ['historical_figures.df_world_id', 'historical_figures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inhabitants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('df_world_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('structure_id', sa.Integer(), nullable=True),
    sa.Column('hfid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['df_world_id', 'hfid'], ['historical_figures.df_world_id', 'historical_figures.id'], ),
    sa.ForeignKeyConstraint(['df_world_id', 'site_id', 'structure_id'], ['structures.df_world_id', 'structures.site_id', 'structures.local_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('artifacts', sa.Column('item_description', sa.String(length=200), nullable=True))
    op.add_column('artifacts', sa.Column('item_subtype', sa.String(length=20), nullable=True))
    op.add_column('artifacts', sa.Column('item_type', sa.String(length=20), nullable=True))
    op.add_column('artifacts', sa.Column('mat', sa.String(length=20), nullable=True))
    op.add_column('df_world', sa.Column('altname', sa.String(length=50), nullable=True))
    op.add_column('entities', sa.Column('claims', sa.String(), nullable=True))
    op.add_column('entities', sa.Column('race', sa.String(length=20), nullable=True))
    op.add_column('entities', sa.Column('type', sa.String(length=20), nullable=True))
    op.add_column('regions', sa.Column('coords', sa.String(), nullable=True))
    op.add_column('sites', sa.Column('civ_id', sa.Integer(), nullable=True))
    op.add_column('sites', sa.Column('current_owner_id', sa.Integer(), nullable=True))
    op.add_column('structures', sa.Column('name2', sa.String(length=50), nullable=True))
    op.add_column('underground_regions', sa.Column('coords', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('underground_regions', 'coords')
    op.drop_column('structures', 'name2')
    op.drop_column('sites', 'current_owner_id')
    op.drop_column('sites', 'civ_id')
    op.drop_column('regions', 'coords')
    op.drop_column('entities', 'type')
    op.drop_column('entities', 'race')
    op.drop_column('entities', 'claims')
    op.drop_column('df_world', 'altname')
    op.drop_column('artifacts', 'mat')
    op.drop_column('artifacts', 'item_type')
    op.drop_column('artifacts', 'item_subtype')
    op.drop_column('artifacts', 'item_description')
    op.drop_table('inhabitants')
    op.drop_table('eventcol_noncoms')
    op.drop_table('eventcol_eventcol_link')
    op.drop_table('eventcol_event_link')
    op.drop_table('eventcol_defenders')
    op.drop_table('eventcol_attackers')
    op.drop_table('members')
    op.drop_table('event_collections')
    op.drop_table('schedules')
    op.drop_table('occasions')
    op.drop_table('mountain_peaks')
    op.drop_table('landmasses')
    op.drop_table('features')
    op.drop_table('entity_positions')
    op.drop_table('entity_populations')
    # ### end Alembic commands ###
